{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { withAsyncContext as _withAsyncContext } from 'vue';\nimport axios from \"axios\";\nimport { useRoute, useRouter } from \"vue-router\";\nexport default {\n  __name: 'AsyncCityView',\n  async setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let __temp, __restore;\n    const route = useRoute();\n    const getWeatherData = async () => {\n      try {\n        const weatherData = await axios.get(`https://api.openweathermap.org/data/3.0/onecall?lat=${route.query.lat}&lon=${route.query.lng}&exclude={part}&appid=ab9ffba82ec7ed4b627b345c57428271`);\n        // call current data & time\n        const localOffset = new Date().getTimezoneOffset() * 60000;\n        const utc = weatherData.data.current.dt * 1000 + localOffset;\n        weatherData.data.currentTime = utc + 1000 * weatherData.data.timezone_offset;\n\n        // call hourly weather offset\n        weatherData.data.hourly.forEach(hour => {\n          const utc = hour.dy * 1000 + localOffset;\n          hour.currentTime = utc + 100 * weatherData.data.timezone_offset;\n        });\n        return weatherData.data;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const weatherData = ([__temp, __restore] = _withAsyncContext(() => getWeatherData()), __temp = await __temp, __restore(), __temp);\n    const router = useRouter();\n    const removeCity = () => {\n      const cities = JSON.parse(localStorage.getItem(\"saveCities\"));\n      const updateCities = cities.filter(city => city.id !== route.query.id);\n    };\n    const __returned__ = {\n      route,\n      getWeatherData,\n      weatherData,\n      router,\n      removeCity,\n      get axios() {\n        return axios;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","useRoute","useRouter","route","getWeatherData","weatherData","get","query","lat","lng","localOffset","Date","getTimezoneOffset","utc","data","current","dt","currentTime","timezone_offset","hourly","forEach","hour","dy","err","console","log","__temp","__restore","_withAsyncContext","router","removeCity","cities","JSON","parse","localStorage","getItem","updateCities","filter","city","id"],"sources":["C:/Users/Nitro/Desktop/MEVN-STACK/Vue/weatherapp/src/components/AsyncCityView.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex flex-col flex-1 items-center\">\r\n    <!-- banner -->\r\n    <div\r\n      v-if=\"route.query.preview\"\r\n      class=\"text-white p-4 bg-weather-secondary w-full text-center\"\r\n    >\r\n      You are currently previewing this city, click the \"+\" icon to start\r\n      tracking this city.\r\n    </div>\r\n    <!-- Weather Overview -->\r\n    <div class=\"flex flex-col items-center text-white py-12\">\r\n      <h1 class=\"text-4xl mb-2\">{{ route.params.city }}</h1>\r\n      <p class=\"text-sm mb-12\">\r\n        {{\r\n          new Date(weatherData.currentTime).toLocaleDateString(\"en-us\", {\r\n            weekday: \"short\",\r\n            day: \"2-digit\",\r\n            month: \"long\",\r\n          })\r\n        }}\r\n        {{\r\n          new Date(weatherData.currentTime).toLocaleTimeString(\"en-us\", {\r\n            timeStyle: \"short\",\r\n          })\r\n        }}\r\n      </p>\r\n      <p class=\"text-8xl mb-8\">\r\n        {{ Math.round(weatherData.current.temp) }}&deg;\r\n      </p>\r\n      <p>\r\n        Feels like\r\n        {{ Math.round(weatherData.current.feels_like) }} &deg;\r\n      </p>\r\n      <p class=\"capitalize\">\r\n        {{ weatherData.current.weather[0].description }} &deg;\r\n      </p>\r\n      <img\r\n        class=\"w-[150px] h-auto\"\r\n        :src=\"`http://openweathermap.org/img/wn/${weatherData.current.weather[0].icon}@2x.png`\"\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n\r\n    <hr class=\"border-white border-opacity-10 border w-full\" />\r\n\r\n    <!-- Hourly Weather -->\r\n    <div class=\"max-w-screen-md w-full py-12\">\r\n      <div class=\"mx-8 text-white\">\r\n        <h2 class=\"mb-4\">Hourly Weather</h2>\r\n        <div class=\"flex gap-12 overflow-x-scroll\">\r\n          <div\r\n            v-for=\"hourData in weatherData.hourly\"\r\n            :key=\"hourData.dt\"\r\n            class=\"flex flex-col gap-4 items-center\"\r\n          >\r\n            <p class=\"whitespace-nowrap text-md\">\r\n              {{\r\n                new Date(hourData.currentTime).toLocaleTimeString(\"en-us\", {\r\n                  hour: \"numeric\",\r\n                })\r\n              }}\r\n            </p>\r\n            <img\r\n              class=\"w-auto h-[50px] object-cover\"\r\n              :src=\"`http://openweathermap.org/img/wn/${hourData.weather[0].icon}@2x.png`\"\r\n              alt=\"\"\r\n            />\r\n            <p class=\"text-xl\">{{ Math.round(hourData.temp) }}&deg;</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <hr class=\"border-white border-opacity-10 border w-full\" />\r\n\r\n    <!-- Weekly Weather -->\r\n    <div class=\"max-w-screen-md w-full py-12\">\r\n      <div class=\"mx-8 text-white\">\r\n        <h2 class=\"mb-4\">Day Forecast</h2>\r\n        <div\r\n          class=\"flex items-center\"\r\n          v-for=\"day in weatherData.daily\"\r\n          :key=\"day.dt\"\r\n        >\r\n          <p class=\"flex-1\">\r\n            {{\r\n              new Date(day.dt * 1000).toLocaleDateString(\"en-us\", {\r\n                weekday: \"long\",\r\n              })\r\n            }}\r\n          </p>\r\n          <img\r\n            class=\"w-[50px] h-[50px] object-cover\"\r\n            :src=\"`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`\"\r\n            alt=\"\"\r\n          />\r\n          <div class=\"flex gap-2 flex-1 justify-end\">\r\n            <p>H: {{ Math.round(day.temp.max) }}</p>\r\n            <p>H: {{ Math.round(day.temp.min) }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"flex items-center gap-2 py-12 text-white cursor-pointer duration-150 hover:text-red-500\"\r\n      @click=\"removeCity\"\r\n    >\r\n      <i class=\"fa-solid fa-trash\"></i>\r\n      <p>Remove City</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from \"axios\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\n\r\nconst route = useRoute();\r\nconst getWeatherData = async () => {\r\n  try {\r\n    const weatherData = await axios.get(\r\n      `https://api.openweathermap.org/data/3.0/onecall?lat=${route.query.lat}&lon=${route.query.lng}&exclude={part}&appid=ab9ffba82ec7ed4b627b345c57428271`\r\n    );\r\n    // call current data & time\r\n    const localOffset = new Date().getTimezoneOffset() * 60000;\r\n    const utc = weatherData.data.current.dt * 1000 + localOffset;\r\n    weatherData.data.currentTime =\r\n      utc + 1000 * weatherData.data.timezone_offset;\r\n\r\n    // call hourly weather offset\r\n    weatherData.data.hourly.forEach((hour) => {\r\n      const utc = hour.dy * 1000 + localOffset;\r\n      hour.currentTime = utc + 100 * weatherData.data.timezone_offset;\r\n    });\r\n    return weatherData.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nconst weatherData = await getWeatherData();\r\n\r\nconst router = useRouter();\r\nconst removeCity = () => {\r\n  const cities = JSON.parse(localStorage.getItem(\"saveCities\"))\r\n  const updateCities = cities.filter(\r\n    (city) => city.id !== route.query.id\r\n  )\r\n};\r\n</script>"],"mappings":";;;;AAoHA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;;;;;;;;IAEhD,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,WAAW,GAAG,MAAML,KAAK,CAACM,GAAG,CACjC,uDAAuDH,KAAK,CAACI,KAAK,CAACC,GAAG,QAAQL,KAAK,CAACI,KAAK,CAACE,GAAG,wDAC/F,CAAC;QACD;QACA,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC,GAAG,KAAK;QAC1D,MAAMC,GAAG,GAAGR,WAAW,CAACS,IAAI,CAACC,OAAO,CAACC,EAAE,GAAG,IAAI,GAAGN,WAAW;QAC5DL,WAAW,CAACS,IAAI,CAACG,WAAW,GAC1BJ,GAAG,GAAG,IAAI,GAAGR,WAAW,CAACS,IAAI,CAACI,eAAe;;QAE/C;QACAb,WAAW,CAACS,IAAI,CAACK,MAAM,CAACC,OAAO,CAAEC,IAAI,IAAK;UACxC,MAAMR,GAAG,GAAGQ,IAAI,CAACC,EAAE,GAAG,IAAI,GAAGZ,WAAW;UACxCW,IAAI,CAACJ,WAAW,GAAGJ,GAAG,GAAG,GAAG,GAAGR,WAAW,CAACS,IAAI,CAACI,eAAe;QACjE,CAAC,CAAC;QACF,OAAOb,WAAW,CAACS,IAAI;MACzB,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACD,MAAMlB,WAAW,IAAG,CAAAqB,MAAA,EAAAC,SAAA,IAAAC,iBAAA,OAAMxB,cAAc,CAAC,I,2CAAC;IAE1C,MAAMyB,MAAM,GAAG3B,SAAS,CAAC,CAAC;IAC1B,MAAM4B,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;MAC7D,MAAMC,YAAY,GAAGL,MAAM,CAACM,MAAM,CAC/BC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKpC,KAAK,CAACI,KAAK,CAACgC,EACpC,CAAC;IACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}