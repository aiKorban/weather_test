{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport { useRouter } from \"vue-router\";\nconst mapboxAPIKey = \"pk.eyJ1IjoicGhlYXJvbTE2OCIsImEiOiJjbTVuYWd0em4wOTFsMm1xNXdyMnV6aXo4In0.JVmV2ZGYWG7oNbxDE3Zi4w\";\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const searchQuery = ref(\"\");\n    const queryTimeout = ref(null);\n    const mapboxSearchResults = ref(null);\n    const searchError = ref(null);\n    const router = useRouter();\n    const previewCity = async searchResult => {\n      const [city, state] = searchResult.title.split(\" \");\n      await router.push({\n        name: \"cityView\",\n        params: {\n          state: state,\n          city: city\n        }\n        // query: {}\n      });\n    };\n    const getSearchResults = async () => {\n      clearTimeout(queryTimeout.value);\n      queryTimeout.value = setTimeout(async () => {\n        if (searchQuery.value !== \"\") {\n          try {\n            const result = await axios.get(`https://api.mapbox.com/search/geocode/v6/forward?q=${searchQuery.value}&access_token=${mapboxAPIKey}&types=place`);\n            mapboxSearchResults.value = result.data.features;\n            console.log(mapboxSearchResults.value);\n            return mapboxSearchResults.value;\n          } catch {\n            searchError.value = true;\n          }\n          return;\n        }\n        mapboxSearchResults.value = null;\n      }, 300);\n    };\n    const __returned__ = {\n      searchQuery,\n      queryTimeout,\n      mapboxSearchResults,\n      searchError,\n      mapboxAPIKey,\n      router,\n      previewCity,\n      getSearchResults,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","mapboxAPIKey","searchQuery","queryTimeout","mapboxSearchResults","searchError","router","previewCity","searchResult","city","state","title","split","push","name","params","getSearchResults","clearTimeout","value","setTimeout","result","get","data","features","console","log"],"sources":["C:/Users/Nitro/Desktop/MEVN-STACK/Vue/weatherapp/src/views/HomeView.vue"],"sourcesContent":["<template>\r\n  <main class=\"container text-white\">\r\n    <div class=\"pt-4 mb-8 relative\">\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"searchQuery\"\r\n        @input=\"getSearchResults\"\r\n        placeholder=\"Search for a city for state\"\r\n        class=\"py-2 px-1 w-full bg-transparent border-b focus:border-weather-secondary focus:outline-none focus:shadow-[0px_1;x_0_0_#004E71]\"\r\n      />\r\n      <ul\r\n        v-if=\"mapboxSearchResults\"\r\n        class=\"absolute bg-weather-secondary text-white w-full shadow-md py-2 px-1 top-[66px]\"\r\n      >\r\n        <p v-if=\"searchError\">Sorry something went wrong. Try again later</p>\r\n        <p v-if=\"!searchError && mapboxSearchResults.length === 0\">\r\n          No result match your query, try a different term.\r\n        </p>\r\n        <template v-else>\r\n          <li\r\n            v-for=\"searchResult in mapboxSearchResults\"\r\n            @click=\"previewCity(searchResult)\"\r\n            :key=\"searchResult.id\"\r\n            class=\"py-2 cursor-pointer\"\r\n          >\r\n            {{ searchResult.place }}\r\n          </li>\r\n        </template>\r\n      </ul>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst searchQuery = ref(\"\");\r\nconst queryTimeout = ref(null);\r\nconst mapboxSearchResults = ref(null);\r\nconst searchError = ref(null);\r\nconst mapboxAPIKey = \"pk.eyJ1IjoicGhlYXJvbTE2OCIsImEiOiJjbTVuYWd0em4wOTFsMm1xNXdyMnV6aXo4In0.JVmV2ZGYWG7oNbxDE3Zi4w\";\r\nconst router = useRouter();\r\n\r\nconst previewCity = async (searchResult) => {\r\n  const [city, state] = searchResult.title.split(\" \");\r\n  await router.push({\r\n    name: \"cityView\",\r\n    params: { state: state, city: city },\r\n    // query: {}\r\n  });\r\n};\r\n\r\nconst getSearchResults = async () => {\r\n\r\n  clearTimeout(queryTimeout.value);\r\n\r\n  queryTimeout.value = setTimeout(async () => {\r\n    if (searchQuery.value !== \"\") {\r\n      try {\r\n        const result = await axios.get(\r\n          `https://api.mapbox.com/search/geocode/v6/forward?q=${searchQuery.value}&access_token=${mapboxAPIKey}&types=place`\r\n        );\r\n        mapboxSearchResults.value = result.data.features\r\n        console.log(mapboxSearchResults.value)\r\n        return mapboxSearchResults.value;\r\n      } catch {\r\n        searchError.value = true;\r\n      }\r\n      return;\r\n    }\r\n    mapboxSearchResults.value = null;\r\n  }, 300);\r\n\r\n\r\n};\r\n</script>\r\n"],"mappings":";AAkCA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AAMtC,MAAMC,YAAY,GAAG,+FAA+F;;;;;;;IAJpH,MAAMC,WAAW,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMK,YAAY,GAAGL,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMM,mBAAmB,GAAGN,GAAG,CAAC,IAAI,CAAC;IACrC,MAAMO,WAAW,GAAGP,GAAG,CAAC,IAAI,CAAC;IAE7B,MAAMQ,MAAM,GAAGN,SAAS,CAAC,CAAC;IAE1B,MAAMO,WAAW,GAAG,MAAOC,YAAY,IAAK;MAC1C,MAAM,CAACC,IAAI,EAAEC,KAAK,CAAC,GAAGF,YAAY,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;MACnD,MAAMN,MAAM,CAACO,IAAI,CAAC;QAChBC,IAAI,EAAE,UAAU;QAChBC,MAAM,EAAE;UAAEL,KAAK,EAAEA,KAAK;UAAED,IAAI,EAAEA;QAAK;QACnC;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MAEnCC,YAAY,CAACd,YAAY,CAACe,KAAK,CAAC;MAEhCf,YAAY,CAACe,KAAK,GAAGC,UAAU,CAAC,YAAY;QAC1C,IAAIjB,WAAW,CAACgB,KAAK,KAAK,EAAE,EAAE;UAC5B,IAAI;YACF,MAAME,MAAM,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAC5B,sDAAsDnB,WAAW,CAACgB,KAAK,iBAAiBjB,YAAY,cACtG,CAAC;YACDG,mBAAmB,CAACc,KAAK,GAAGE,MAAM,CAACE,IAAI,CAACC,QAAQ;YAChDC,OAAO,CAACC,GAAG,CAACrB,mBAAmB,CAACc,KAAK,CAAC;YACtC,OAAOd,mBAAmB,CAACc,KAAK;UAClC,CAAC,CAAC,MAAM;YACNb,WAAW,CAACa,KAAK,GAAG,IAAI;UAC1B;UACA;QACF;QACAd,mBAAmB,CAACc,KAAK,GAAG,IAAI;MAClC,CAAC,EAAE,GAAG,CAAC;IAGT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}