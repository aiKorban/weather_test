{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { withAsyncContext as _withAsyncContext } from 'vue';\nimport CityCard from \"./CityCard.vue\";\nimport axios from \"axios\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'CityList',\n  async setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let __temp, __restore;\n    const saveCities = ref([]);\n    const getCities = async () => {\n      if (localStorage.getItem(\"saveCities\")) {\n        saveCities.value = JSON.parse(localStorage.getItem(\"saveCities\"));\n        const requests = [];\n        saveCities.value.forEach(city => {\n          requests.push(axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${city.coords.lat}&lon=${city.coords.lng}&appid=ab9ffba82ec7ed4b627b345c57428271&units=imperial`));\n        });\n\n        // we use promise.all for array promise, it mean that look at to the foreach, it render alot await(xios.get)\n        // and we can not use promiss in foreach function\n        const weatherData = await Promise.all(requests);\n        weatherData.forEach((value, index) => {\n          saveCities.value[index].weather = value.data;\n        });\n      }\n    };\n    ;\n    [__temp, __restore] = _withAsyncContext(() => getCities()), await __temp, __restore();\n    const router = useRouter();\n    const geToCityView = city => {\n      router.push({\n        name: 'city'\n      });\n    };\n    const __returned__ = {\n      saveCities,\n      getCities,\n      router,\n      geToCityView,\n      CityCard,\n      get axios() {\n        return axios;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["CityCard","axios","ref","useRouter","saveCities","getCities","localStorage","getItem","value","JSON","parse","requests","forEach","city","push","get","coords","lat","lng","weatherData","Promise","all","index","weather","data","__temp","__restore","_withAsyncContext","router","geToCityView","name"],"sources":["C:/Users/Nitro/Desktop/MEVN-STACK/Vue/weatherapp/src/components/CityList.vue"],"sourcesContent":["<template>\r\n  <div v-for=\"city in saveCities\" :key=\"city.id\">\r\n    <CityCard :city=\"city\" @click=\"geToCityView(city)\"/>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport CityCard from \"./CityCard.vue\"\r\nimport axios from \"axios\";\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nconst saveCities = ref([]);\r\n\r\nconst getCities = async () => {\r\n  if (localStorage.getItem(\"saveCities\")) {\r\n    saveCities.value = JSON.parse(localStorage.getItem(\"saveCities\"));\r\n\r\n    const requests = [];\r\n    saveCities.value.forEach((city) => {\r\n      requests.push(\r\n        axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?lat=${city.coords.lat}&lon=${city.coords.lng}&appid=ab9ffba82ec7ed4b627b345c57428271&units=imperial`\r\n        )\r\n      );\r\n    });\r\n\r\n    // we use promise.all for array promise, it mean that look at to the foreach, it render alot await(xios.get)\r\n    // and we can not use promiss in foreach function\r\n    const weatherData = await Promise.all(requests)\r\n\r\n    weatherData.forEach((value, index) => {\r\n      saveCities.value[index].weather = value.data;\r\n    });\r\n  }\r\n};\r\nawait getCities()\r\nconst router = useRouter()\r\nconst geToCityView = (city) =>{\r\n  router.push({\r\n    name: 'city'\r\n  })\r\n}\r\n</script>"],"mappings":";;;;AAOA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;;IACtC,MAAMC,UAAU,GAAGF,GAAG,CAAC,EAAE,CAAC;IAE1B,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;QACtCH,UAAU,CAACI,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;QAEjE,MAAMI,QAAQ,GAAG,EAAE;QACnBP,UAAU,CAACI,KAAK,CAACI,OAAO,CAAEC,IAAI,IAAK;UACjCF,QAAQ,CAACG,IAAI,CACXb,KAAK,CAACc,GAAG,CACP,uDAAuDF,IAAI,CAACG,MAAM,CAACC,GAAG,QAAQJ,IAAI,CAACG,MAAM,CAACE,GAAG,wDAC/F,CACF,CAAC;QACH,CAAC,CAAC;;QAEF;QACA;QACA,MAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;QAE/CQ,WAAW,CAACP,OAAO,CAAC,CAACJ,KAAK,EAAEc,KAAK,KAAK;UACpClB,UAAU,CAACI,KAAK,CAACc,KAAK,CAAC,CAACC,OAAO,GAAGf,KAAK,CAACgB,IAAI;QAC9C,CAAC,CAAC;MACJ;IACF,CAAC;IACD;IAAA,CAAAC,MAAA,EAAAC,SAAA,IAAAC,iBAAA,OAAMtB,SAAS,CAAC,I;IAChB,MAAMuB,MAAM,GAAGzB,SAAS,CAAC,CAAC;IAC1B,MAAM0B,YAAY,GAAIhB,IAAI,IAAI;MAC5Be,MAAM,CAACd,IAAI,CAAC;QACVgB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}