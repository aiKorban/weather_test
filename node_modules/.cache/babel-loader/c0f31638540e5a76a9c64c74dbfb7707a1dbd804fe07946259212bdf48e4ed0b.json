{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { withAsyncContext as _withAsyncContext } from 'vue';\nimport axios from \"axios\";\nimport { useRoute } from \"vue-router\";\nexport default {\n  __name: 'AsyncCityView',\n  async setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let __temp, __restore;\n    const route = useRoute();\n    const getWeatherData = async () => {\n      try {\n        const weatherData = await axios.get(`https://api.openweathermap.org/data/3.0/onecall?lat=${route.query.lat}&lon={lon}&appid={API key}`);\n        // call current data & time\n        const localOffset = new Date().getTimezoneOffset() * 60000;\n        const utc = weatherData.data.current.dt * 1000 + localOffset;\n        weatherData.data.currentTime = utc + 1000 * weatherData.data.timezone_offset;\n\n        // call hourly weather offset\n        weatherData.data.hourly.forEach(hour => {\n          const utc = hour.dy * 1000 + localOffset;\n          hour.currentTime = utc + 100 * weatherData.data.timezone_offset;\n        });\n        return weatherData;\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const weatherData = ([__temp, __restore] = _withAsyncContext(() => getWeatherData()), __temp = await __temp, __restore(), __temp);\n    console.log(weatherData);\n    const __returned__ = {\n      route,\n      getWeatherData,\n      weatherData,\n      get axios() {\n        return axios;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","useRoute","route","getWeatherData","weatherData","get","query","lat","localOffset","Date","getTimezoneOffset","utc","data","current","dt","currentTime","timezone_offset","hourly","forEach","hour","dy","err","console","log","__temp","__restore","_withAsyncContext"],"sources":["C:/Users/Nitro/Desktop/MEVN-STACK/Vue/weatherapp/src/components/AsyncCityView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import axios from \"axios\";\r\n    import { useRoute } from \"vue-router\"\r\n\r\n    const route = useRoute();\r\n    const getWeatherData = async () =>{\r\n        try{\r\n            const weatherData = await axios.get(`https://api.openweathermap.org/data/3.0/onecall?lat=${route.query.lat}&lon={lon}&appid={API key}`);\r\n            // call current data & time\r\n            const localOffset = new Date().getTimezoneOffset() * 60000;\r\n            const utc = weatherData.data.current.dt* 1000 + localOffset;\r\n            weatherData.data.currentTime = utc + 1000 * weatherData.data.timezone_offset;\r\n\r\n            // call hourly weather offset\r\n            weatherData.data.hourly.forEach((hour) => {\r\n                const utc = hour.dy * 1000 + localOffset;\r\n                hour.currentTime = utc + 100 * weatherData.data.timezone_offset;\r\n            });\r\n            return weatherData;\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    const weatherData = await getWeatherData();\r\n    console.log(weatherData)\r\n</script>"],"mappings":";;;AAOI,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;;;;;;;;IAErC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAW;MAC9B,IAAG;QACC,MAAMC,WAAW,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,uDAAuDH,KAAK,CAACI,KAAK,CAACC,GAAG,4BAA4B,CAAC;QACvI;QACA,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC,GAAG,KAAK;QAC1D,MAAMC,GAAG,GAAGP,WAAW,CAACQ,IAAI,CAACC,OAAO,CAACC,EAAE,GAAE,IAAI,GAAGN,WAAW;QAC3DJ,WAAW,CAACQ,IAAI,CAACG,WAAW,GAAGJ,GAAG,GAAG,IAAI,GAAGP,WAAW,CAACQ,IAAI,CAACI,eAAe;;QAE5E;QACAZ,WAAW,CAACQ,IAAI,CAACK,MAAM,CAACC,OAAO,CAAEC,IAAI,IAAK;UACtC,MAAMR,GAAG,GAAGQ,IAAI,CAACC,EAAE,GAAG,IAAI,GAAGZ,WAAW;UACxCW,IAAI,CAACJ,WAAW,GAAGJ,GAAG,GAAG,GAAG,GAAGP,WAAW,CAACQ,IAAI,CAACI,eAAe;QACnE,CAAC,CAAC;QACF,OAAOZ,WAAW;MACtB,CAAC,QAAMiB,GAAG,EAAC;QACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ,CAAC;IACD,MAAMjB,WAAW,IAAG,CAAAoB,MAAA,EAAAC,SAAA,IAAAC,iBAAA,OAAMvB,cAAc,CAAC,I,2CAAC;IAC1CmB,OAAO,CAACC,GAAG,CAACnB,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}