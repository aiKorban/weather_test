{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.saveCities, city => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: city.id\n    }, [_createVNode($setup[\"CityCard\"], {\n      city: city,\n      onClick: $event => $setup.geToCityView(city)\n    }, null, 8 /* PROPS */, [\"city\", \"onClick\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.saveCities.le ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","_renderList","$setup","saveCities","city","id","_createVNode","onClick","$event","geToCityView","le","_hoisted_1","_createCommentVNode"],"sources":["C:\\Users\\Nitro\\Desktop\\MEVN-STACK\\Vue\\weatherapp\\src\\components\\CityList.vue"],"sourcesContent":["<template>\r\n  <div v-for=\"city in saveCities\" :key=\"city.id\">\r\n    <CityCard :city=\"city\" @click=\"geToCityView(city)\"/>\r\n  </div>\r\n  <p v-if=\"saveCities.le\"></p>\r\n</template>\r\n\r\n<script setup>\r\nimport CityCard from \"./CityCard.vue\"\r\nimport axios from \"axios\";\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nconst saveCities = ref([]);\r\n\r\nconst getCities = async () => {\r\n  if (localStorage.getItem(\"saveCities\")) {\r\n    saveCities.value = JSON.parse(localStorage.getItem(\"saveCities\"));\r\n\r\n    const requests = [];\r\n    saveCities.value.forEach((city) => {\r\n      requests.push(\r\n        axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?lat=${city.coords.lat}&lon=${city.coords.lng}&appid=ab9ffba82ec7ed4b627b345c57428271&units=imperial`\r\n        )\r\n      );\r\n    });\r\n\r\n    // we use promise.all for array promise, it mean that look at to the foreach, it render alot await(xios.get)\r\n    // and we can not use promiss in foreach function\r\n    const weatherData = await Promise.all(requests)\r\n\r\n    weatherData.forEach((value, index) => {\r\n      saveCities.value[index].weather = value.data;\r\n    });\r\n  }\r\n};\r\nawait getCities()\r\nconst router = useRouter()\r\nconst geToCityView = (city) =>{\r\n  router.push({\r\n    name: \"cityView\",\r\n    params: { state: city.state.replace(\" \",\"\"), city: city.city.replace(\" \",\"\") },\r\n    query: {\r\n      lat: city.coords.lat,\r\n      lng: city.coords.lng,\r\n      preview: true\r\n    }\r\n  })\r\n}\r\n</script>"],"mappings":";;EAAAA,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,U,kBACED,mBAAA,CAEMC,SAAA,QAHRC,WAAA,CACsBC,MAAA,CAAAC,UAAU,EAAlBC,IAAI;yBAAhBL,mBAAA,CAEM;MAF2BD,GAAG,EAAEM,IAAI,CAACC;QACzCC,YAAA,CAAoDJ,MAAA;MAAzCE,IAAI,EAAEA,IAAI;MAAGG,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,YAAY,CAACL,IAAI;;kCAEzCF,MAAA,CAAAC,UAAU,CAACO,EAAE,I,cAAtBX,mBAAA,CAA4B,KAJ9BY,UAAA,KAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}