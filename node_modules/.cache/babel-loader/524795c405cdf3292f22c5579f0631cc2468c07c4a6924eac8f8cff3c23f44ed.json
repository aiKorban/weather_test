{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport { uid } from \"uid\";\nimport { RouterLink, useRoute, useRouter } from \"vue-router\";\nimport BaseModal from \"./BaseModal.vue\";\nexport default {\n  __name: 'SiteNavigation',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const saveCities = ref([]);\n    const route = useRoute();\n    const router = useRouter();\n    const addCity = () => {\n      if (localStorage.getItem(\"saveCities\")) {\n        saveCities.value = JSON.parse(localStorage.getItem(\"saveCities\"));\n      }\n      const locationObj = {\n        id: uid(),\n        state: route.params.state,\n        city: route.params.city,\n        coords: {\n          lat: route.query.lat,\n          lng: route.query.lng\n        }\n      };\n      saveCities.value.push(locationObj);\n      localStorage.setItem('saveCities', JSON.stringify(saveCities.value));\n      let query = Object.assign({}, route.query);\n      delete query.preview;\n      router.replace({\n        query\n      });\n    };\n    const modalActive = ref(false);\n    const toggleModal = () => {\n      modalActive.value = !modalActive.value;\n    };\n    const __returned__ = {\n      saveCities,\n      route,\n      router,\n      addCity,\n      modalActive,\n      toggleModal,\n      ref,\n      get uid() {\n        return uid;\n      },\n      get RouterLink() {\n        return RouterLink;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      BaseModal\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","uid","RouterLink","useRoute","useRouter","BaseModal","saveCities","route","router","addCity","localStorage","getItem","value","JSON","parse","locationObj","id","state","params","city","coords","lat","query","lng","push","setItem","stringify","Object","assign","preview","replace","modalActive","toggleModal"],"sources":["C:/Users/Nitro/Desktop/MEVN-STACK/Vue/weather_test/src/components/SiteNavigation.vue"],"sourcesContent":["<template>\r\n  <header class=\"sticky top-0 bg-weather-primary shadow-lg\">\r\n    <nav\r\n      class=\"container flex flex-col sm:flex-row items-center gap-4 text-white py-6\"\r\n    >\r\n      <RouterLink :to=\"{ name: 'home' }\">\r\n        <div class=\"flex items-center gap-3\">\r\n          <p class=\"text-2xl\">üêº</p>\r\n          <p class=\"text-2xl\">Weather App</p>\r\n        </div>\r\n      </RouterLink>\r\n\r\n      <div class=\"flex gap-3 flex-1 justify-end\">\r\n        <i\r\n          class=\"fa-solid fa-circle-info text-xl hover:text-weather-secondary duration-150 cursor-pointer\"\r\n          @click=\"toggleModal\"\r\n        ></i>\r\n        <i\r\n          @click=\"addCity\"\r\n          v-if=\"route.query.preview\"\r\n          class=\"fa-solid fa-plus text-xl hover:text-weather-secondary duration-150 cursor-pointer\"\r\n        ></i>\r\n      </div>\r\n\r\n      <BaseModal :modalActive=\"modalActive\" @close-modal=\"toggleModal\">\r\n        <div class=\"text-black\">\r\n          <h1 class=\"text-2xl mb-1\">About:</h1>\r\n          <p class=\"mb-4\">\r\n            The Local Weather allows you to track the current and future weather\r\n            of cities of your choosing.\r\n          </p>\r\n          <h2 class=\"text-2xl\">How it works:</h2>\r\n          <ol class=\"list-decimal list-inside mb-4\">\r\n            <li>\r\n              Search for you city by entering the name into the search bar\r\n            </li>\r\n            <li>\r\n              Select a city within the results, this will take you to the\r\n              current weather for your selection.\r\n            </li>\r\n            <li>\r\n              Track the city by clicking on the \"+\" icon in the top right. This\r\n              will save the city to view at a later time on the home page.\r\n            </li>\r\n          </ol>\r\n          <h2 class=\"text-2xl\">Removing a city</h2>\r\n          <p>\r\n            if you no longer wish to track a city, simply select the city within\r\n            the hom page. At the bottom of the page, there will be am option to\r\n            delete the city.\r\n          </p>\r\n        </div>\r\n      </BaseModal>\r\n    </nav>\r\n  </header>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { uid } from \"uid\";\r\n\r\nimport { RouterLink, useRoute, useRouter } from \"vue-router\";\r\nimport BaseModal from \"./BaseModal.vue\";\r\n\r\nconst saveCities = ref([]);\r\nconst route = useRoute();\r\nconst router = useRouter()\r\n\r\nconst addCity = () => {\r\n  if (localStorage.getItem(\"saveCities\")) {\r\n    saveCities.value = JSON.parse(localStorage.getItem(\"saveCities\"));\r\n  }\r\n\r\n  const locationObj = {\r\n    id: uid(),\r\n    state: route.params.state,\r\n    city: route.params.city,\r\n    coords: {\r\n      lat: route.query.lat,\r\n      lng: route.query.lng,\r\n    },\r\n  };\r\n\r\n  saveCities.value.push(locationObj)\r\n  localStorage.setItem('saveCities', JSON.stringify(saveCities.value))\r\n\r\n  let query = Object.assign({}, route.query)\r\n  delete query.preview\r\n  router.replace({query})\r\n};\r\n\r\nconst modalActive = ref(false);\r\nconst toggleModal = () => {\r\n  modalActive.value = !modalActive.value;\r\n};\r\n</script>"],"mappings":";AA0DA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,GAAG,QAAQ,KAAK;AAEzB,SAASC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAC5D,OAAOC,SAAS,MAAM,iBAAiB;;;;;;;IAEvC,MAAMC,UAAU,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMO,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAM,GAAGJ,SAAS,CAAC,CAAC;IAE1B,MAAMK,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE;QACtCL,UAAU,CAACM,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;MACnE;MAEA,MAAMI,WAAW,GAAG;QAClBC,EAAE,EAAEf,GAAG,CAAC,CAAC;QACTgB,KAAK,EAAEV,KAAK,CAACW,MAAM,CAACD,KAAK;QACzBE,IAAI,EAAEZ,KAAK,CAACW,MAAM,CAACC,IAAI;QACvBC,MAAM,EAAE;UACNC,GAAG,EAAEd,KAAK,CAACe,KAAK,CAACD,GAAG;UACpBE,GAAG,EAAEhB,KAAK,CAACe,KAAK,CAACC;QACnB;MACF,CAAC;MAEDjB,UAAU,CAACM,KAAK,CAACY,IAAI,CAACT,WAAW,CAAC;MAClCL,YAAY,CAACe,OAAO,CAAC,YAAY,EAAEZ,IAAI,CAACa,SAAS,CAACpB,UAAU,CAACM,KAAK,CAAC,CAAC;MAEpE,IAAIU,KAAK,GAAGK,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAErB,KAAK,CAACe,KAAK,CAAC;MAC1C,OAAOA,KAAK,CAACO,OAAO;MACpBrB,MAAM,CAACsB,OAAO,CAAC;QAACR;MAAK,CAAC,CAAC;IACzB,CAAC;IAED,MAAMS,WAAW,GAAG/B,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMgC,WAAW,GAAGA,CAAA,KAAM;MACxBD,WAAW,CAACnB,KAAK,GAAG,CAACmB,WAAW,CAACnB,KAAK;IACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}