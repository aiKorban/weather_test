{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Weather Data\", -1 /* HOISTED */)), _createElementVNode(\"pre\", null, _toDisplayString($setup.weatherData), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$setup","weatherData"],"sources":["C:\\Users\\Nitro\\Desktop\\MEVN-STACK\\Vue\\weatherapp\\src\\components\\AsyncCityView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Weather Data</h1>\r\n    <pre>{{ weatherData }}</pre>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { useRoute } from \"vue-router\";\r\n\r\nconst route = useRoute();\r\nconst weatherData = ref(null);\r\n\r\nconst getWeatherData = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://api.openweathermap.org/data/3.0/onecall?lat=${route.query.lat}&lon=${route.query.lng}&exclude=minutely&appid=f07f7c0d402dcf74f43168996815e065&units=imperial`\r\n    );\r\n    const localOffset = new Date().getTimezoneOffset() * 60000;\r\n    const utc = response.data.current.dt * 1000 + localOffset;\r\n    response.data.currentTime = utc + 1000 * response.data.timezone_offset;\r\n\r\n    // Process hourly weather data\r\n    response.data.hourly.forEach((hour) => {\r\n      const utc = hour.dt * 1000 + localOffset; // Fixed `dy` to `dt`\r\n      hour.currentTime = utc + 1000 * response.data.timezone_offset;\r\n    });\r\n\r\n    weatherData.value = response.data; // Save data in reactive variable\r\n  } catch (err) {\r\n    console.error(\"Error fetching weather data:\", err);\r\n  }\r\n};\r\n\r\n// Fetch weather data on component mount\r\nonMounted(() => {\r\n  getWeatherData();\r\n});\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAGM,c,0BAFJC,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAA4B,aAAAC,gBAAA,CAApBC,MAAA,CAAAC,WAAW,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}